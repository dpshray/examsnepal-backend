{
    "openapi": "3.0.0",
    "info": {
        "title": "ExamsNepal  API",
        "description": "API Endpoints for Forum Questions",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.examsnepal.dworklabs.com/api",
            "description": "Localhost API Server"
        }
    ],
    "paths": {
        "/student/questions": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Fetch all questions based on the user's stream",
                "operationId": "5f8975f74f0dd4ec19f65c2eea3847af",
                "responses": {
                    "200": {
                        "description": "List of questions"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/myquestions": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Fetch all questions created by me",
                "operationId": "c9e58b3446dbf1f37afac09db1dcf2c6",
                "responses": {
                    "200": {
                        "description": "List of questions created by me"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/addquestion": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "summary": "Add a new question",
                "description": "Adds a new question to the forum for the authenticated user.",
                "operationId": "addQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question"
                                ],
                                "properties": {
                                    "question": {
                                        "description": "The question to be added.",
                                        "type": "string",
                                        "example": "What is the best way to improve my coding skills?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question added successfully"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the best way to improve my coding skills?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "question": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/edit/{id}": {
            "put": {
                "tags": [
                    "Forum"
                ],
                "summary": "Update a question by its ID if only created Question by Authenticated user",
                "description": "Update a question created by the authenticated user. Performs validation for uniqueness, stream type, and updates the question details.",
                "operationId": "updateQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body to update the question",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "example": "What is the capital of Nepal?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question updated successfully"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Stream type does not match for the student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stream type does not match for the student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found or already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found or already deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "question": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The user has already created this question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have already created this question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/their/{id}": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Get a question by its ID Created By authenticated user",
                "description": "Fetch the details of a question if the authenticated user is the owner. Unauthorized access will return a 403 response.",
                "operationId": "getQuestionByTheirId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question details"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access, the user is not the owner of the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to access this question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/{id}": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Get a question by its ID",
                "description": "Fetch the details of a specific question by its ID. Only the owner of the question can view the details.",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question details"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forum"
                ],
                "summary": "Delete a question by its ID",
                "description": "Deletes a question if the authenticated user is the owner of the question.",
                "operationId": "deleteTheirQuestionCreated",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized or Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/login": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Login Student",
                "description": "Authenticate a student and return a JWT token",
                "operationId": "loginStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "dhurbac66@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Nepal123#"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_generated_jwt_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/logout": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Logout Student",
                "description": "Invalidates the JWT token to log out the student.",
                "operationId": "29c81c6c2100cbaaa3bd5bbcdf69c26b",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not log out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not log out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/refresh": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Refresh Student Token",
                "description": "Generates a new access token using the old (expired) token.",
                "operationId": "b45cf46ec135be91f9deab8ec873a7b2",
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookmarks": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks with associated forum questions",
                "description": "This endpoint retrieves all bookmarks and includes associated forum questions.",
                "operationId": "getAllBookmarks",
                "responses": {
                    "200": {
                        "description": "Bookmarks and their associated forum questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "The unique ID of the bookmark",
                                                "type": "integer"
                                            },
                                            "student_id": {
                                                "description": "The ID of the student who created the bookmark",
                                                "type": "integer"
                                            },
                                            "title": {
                                                "description": "The title of the bookmark",
                                                "type": "string"
                                            },
                                            "url": {
                                                "description": "The URL of the bookmark",
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "description": "Creation timestamp of the bookmark",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "description": "Last update timestamp of the bookmark",
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The unique ID of the forum question",
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "description": "The title of the forum question",
                                                        "type": "string"
                                                    },
                                                    "content": {
                                                        "description": "The content of the forum question",
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "description": "Creation timestamp of the forum question",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "description": "Last update timestamp of the forum question",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookmarks found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a new bookmark",
                "description": "Stores a new bookmark.",
                "operationId": "storeBookmark",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "exam_id",
                                    "question_id"
                                ],
                                "properties": {
                                    "student_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bookmark created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "student_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 101
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/bookmarks/{id}": {
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete a bookmark",
                "operationId": "deleteBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark deleted successfully"
                    },
                    "404": {
                        "description": "Bookmark not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/bookmarks/student/{student_id}": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmarks by student ID",
                "description": "Fetches all bookmarks associated with a given student ID",
                "operationId": "d01d5366a11e24224cd352d71c5c821b",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "description": "ID of the student whose bookmarks are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid student ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookmarks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No bookmarks found for the given student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookmarks/allmy": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks for the authenticated user",
                "description": "Fetches all bookmarks for the authenticated user.",
                "operationId": "getAllMyBookmarks",
                "responses": {
                    "200": {
                        "description": "Bookmarks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-04T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-04T12:00:00Z"
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "What is Laravel?"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "Can someone explain what Laravel is?"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not Authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookmarks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No bookmarks found for the given student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/exam": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get all exams",
                "description": "Fetches a list of exams along with their associated organizations and exam types.",
                "operationId": "getExams",
                "responses": {
                    "200": {
                        "description": "List of exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Create a new exam",
                "description": "Store a new exam in the database.",
                "operationId": "storeExam",
                "requestBody": {
                    "description": "Exam data to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "organization_id",
                                    "exam_type_id",
                                    "name",
                                    "exam_date",
                                    "exam_time"
                                ],
                                "properties": {
                                    "organization_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Mathematics Final Exam"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A detailed mathematics final exam."
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-15"
                                    },
                                    "exam_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 500
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exam created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "organization_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mathematics Final Exam"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A detailed mathematics final exam."
                                                },
                                                "exam_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-15"
                                                },
                                                "exam_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to store exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam/{id}": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get an exam by ID",
                "description": "Retrieve the details of a specific exam by its ID.",
                "operationId": "getExamById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "exam_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "exam_time": {
                                            "type": "string",
                                            "format": "time"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "price": {
                                            "type": "integer"
                                        },
                                        "organization": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "exam_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Exams"
                ],
                "summary": "Update an existing exam",
                "description": "Update an exam's details in the database.",
                "operationId": "updateExam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "organization_id",
                                    "exam_type_id",
                                    "name",
                                    "exam_date",
                                    "exam_time"
                                ],
                                "properties": {
                                    "organization_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Mathematics Final Exam"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the mathematics final exam."
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-15"
                                    },
                                    "exam_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 600
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exam updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "organization_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Mathematics Final Exam"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description of the mathematics final exam."
                                                },
                                                "exam_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-07-15"
                                                },
                                                "exam_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "10:00:00"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 600
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-01T12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Exams"
                ],
                "summary": "Delete an exam by ID",
                "description": "Delete an exam from the database by its ID.",
                "operationId": "deleteExam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-types": {
            "get": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Get all exam types",
                "description": "Retrieve a list of all exam types.",
                "operationId": "getExamTypes",
                "responses": {
                    "200": {
                        "description": "A list of exam types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "mdms"
                                            },
                                            "is_active": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-01T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-01T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Create a new exam type (for Admin)",
                "description": "This endpoint creates a new exam type with a name and active status.",
                "operationId": "createExamType",
                "requestBody": {
                    "description": "Exam type creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the exam type",
                                        "type": "string",
                                        "example": "MCQ"
                                    },
                                    "is_active": {
                                        "description": "Whether the exam type is active or not",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exam type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (e.g., missing required fields)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The exam type name is required."
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The status is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-types/{id}": {
            "get": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Get an exam type by ID (for Admin)",
                "description": "Retrieve the details of an exam type by its ID.",
                "operationId": "getExamTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam type retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "MCQ"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:05:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Update an existing exam type (for Admin)",
                "description": "Update the details of an existing exam type.",
                "operationId": "updateExamType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam type update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the exam type",
                                        "type": "string",
                                        "example": "MCQ"
                                    },
                                    "is_active": {
                                        "description": "Whether the exam type is active or not",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exam type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "MCQ"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (e.g., missing required fields)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The exam type name is required."
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The status is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Delete an exam type (for Admin)",
                "description": "Delete an exam type by its ID.",
                "operationId": "deleteExamType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all organizations",
                "description": "Retrieve the list of all organizations.",
                "operationId": "getAllOrganizations",
                "responses": {
                    "200": {
                        "description": "List of organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve organizations"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create a new organization",
                "description": "Create a new organization and store it in the database.",
                "operationId": "createOrganization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Organization"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "info@org.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Organization St."
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get an organization by ID",
                "description": "Retrieve the details of an organization by its ID.",
                "operationId": "getOrganizationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization",
                "description": "Update the details of an organization.",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Org"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "updated@org.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Updated St."
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an organization",
                "description": "Delete an organization from the database.",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get questions based on user exam type with pagination",
                "description": "Fetches questions for the authenticated user based on their exam type, with pagination support.",
                "operationId": "getQuestions",
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is PHP?"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://your-api.com/api/questions?page=2"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student profile not found or no exams found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Create a new question",
                "description": "This endpoint allows users to create a new question.",
                "operationId": "storeQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exam_id",
                                    "question",
                                    "option_1",
                                    "option_value_1",
                                    "option_2",
                                    "option_value_2"
                                ],
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "What is the capital of Nepal?"
                                    },
                                    "option_1": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Kathmandu"
                                    },
                                    "option_value_1": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_2": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Pokhara"
                                    },
                                    "option_value_2": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "option_3": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Lalitpur",
                                        "nullable": true
                                    },
                                    "option_value_3": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "option_4": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Bhaktapur",
                                        "nullable": true
                                    },
                                    "option_value_4": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "Kathmandu is the capital of Nepal.",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Geography",
                                        "nullable": true
                                    },
                                    "exam_type": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "MCQ",
                                        "nullable": true
                                    },
                                    "remark": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Important question",
                                        "nullable": true
                                    },
                                    "serial": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "old_exam_id": {
                                        "type": "integer",
                                        "example": 123,
                                        "nullable": true
                                    },
                                    "uploader": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "mark_type": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Numerical",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question created successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question created successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "option_1": {
                                                    "type": "string",
                                                    "example": "Kathmandu"
                                                },
                                                "option_value_1": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_2": {
                                                    "type": "string",
                                                    "example": "Pokhara"
                                                },
                                                "option_value_2": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "option_3": {
                                                    "type": "string",
                                                    "example": "Lalitpur",
                                                    "nullable": true
                                                },
                                                "option_value_3": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                },
                                                "option_4": {
                                                    "type": "string",
                                                    "example": "Bhaktapur",
                                                    "nullable": true
                                                },
                                                "option_value_4": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "nullable": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Kathmandu is the capital of Nepal.",
                                                    "nullable": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Geography",
                                                    "nullable": true
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "MCQ",
                                                    "nullable": true
                                                },
                                                "remark": {
                                                    "type": "string",
                                                    "example": "Important question",
                                                    "nullable": true
                                                },
                                                "serial": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "old_exam_id": {
                                                    "type": "integer",
                                                    "example": 123,
                                                    "nullable": true
                                                },
                                                "uploader": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "mark_type": {
                                                    "type": "string",
                                                    "example": "Numerical",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create Question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create Question. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions/all": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get all questions",
                "description": "Fetches all the questions from the database.",
                "operationId": "getAllQuestions",
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is PHP?"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No questions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No questions found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-questions": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Search MCQs by keyword",
                "description": "Searches for multiple-choice questions (MCQs) based on a keyword using Full-Text Search.",
                "operationId": "searchQuestions",
                "parameters": [
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword to search for MCQs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "question": {
                                                                "type": "string",
                                                                "example": "What is Laravel?"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "correct_answer": {
                                                                "type": "string",
                                                                "example": "A PHP framework"
                                                            },
                                                            "exam_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Keyword is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Keyword is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No questions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No questions found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions/{id}": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get a question by ID",
                "description": "This endpoint allows users to retrieve a specific question by its ID.",
                "operationId": "showQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question retrieved successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "option_1": {
                                                    "type": "string",
                                                    "example": "Kathmandu"
                                                },
                                                "option_value_1": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_2": {
                                                    "type": "string",
                                                    "example": "Pokhara"
                                                },
                                                "option_value_2": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "option_3": {
                                                    "type": "string",
                                                    "example": "Lalitpur",
                                                    "nullable": true
                                                },
                                                "option_value_3": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                },
                                                "option_4": {
                                                    "type": "string",
                                                    "example": "Bhaktapur",
                                                    "nullable": true
                                                },
                                                "option_value_4": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "nullable": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Kathmandu is the capital of Nepal.",
                                                    "nullable": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Geography",
                                                    "nullable": true
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "MCQ",
                                                    "nullable": true
                                                },
                                                "remark": {
                                                    "type": "string",
                                                    "example": "Important question",
                                                    "nullable": true
                                                },
                                                "serial": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "old_exam_id": {
                                                    "type": "integer",
                                                    "example": 123,
                                                    "nullable": true
                                                },
                                                "uploader": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "mark_type": {
                                                    "type": "string",
                                                    "example": "Numerical",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No question found with the given ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve the question. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Update a question",
                "description": "Update an existing question by ID.",
                "operationId": "updateExamQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question": {
                                        "type": "string",
                                        "example": "What is the capital of Nepal?"
                                    },
                                    "option_1": {
                                        "type": "string",
                                        "example": "Kathmandu"
                                    },
                                    "option_value_1": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_2": {
                                        "type": "string",
                                        "example": "Pokhara"
                                    },
                                    "option_value_2": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "option_3": {
                                        "type": "string",
                                        "example": "Lalitpur",
                                        "nullable": true
                                    },
                                    "option_value_3": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "option_4": {
                                        "type": "string",
                                        "example": "Bhaktapur",
                                        "nullable": true
                                    },
                                    "option_value_4": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "Kathmandu is the capital of Nepal.",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Geography",
                                        "nullable": true
                                    },
                                    "exam_type": {
                                        "type": "string",
                                        "example": "MCQ",
                                        "nullable": true
                                    },
                                    "remark": {
                                        "type": "string",
                                        "example": "Important question",
                                        "nullable": true
                                    },
                                    "serial": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "old_exam_id": {
                                        "type": "integer",
                                        "example": 123,
                                        "nullable": true
                                    },
                                    "uploader": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "mark_type": {
                                        "type": "string",
                                        "example": "Numerical",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question updated successfully!"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update the question. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Delete a question",
                "description": "Delete a question by its ID.",
                "operationId": "deleteExamQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete the question. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/register": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Register a new student",
                "description": "This endpoint allows you to register a new student by providing necessary details.",
                "operationId": "registerStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "exam_type": {
                                        "type": "string",
                                        "example": "mdms"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Forum",
            "description": "API Endpoints for Managing Forum Questions"
        },
        {
            "name": "Student Authentication",
            "description": "Student Authentication"
        },
        {
            "name": "Bookmarks",
            "description": "Bookmarks"
        },
        {
            "name": "Exams",
            "description": "Exams"
        },
        {
            "name": "Exam Types",
            "description": "Exam Types"
        },
        {
            "name": "Organizations",
            "description": "Organizations"
        },
        {
            "name": "MCQs",
            "description": "MCQs"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}