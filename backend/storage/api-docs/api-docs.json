{
    "openapi": "3.0.0",
    "info": {
        "title": "ExamsNepal  API",
        "description": "API Endpoints for Forum Questions",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "https://api.examsnepal.dworklabs.com/api/",
            "description": "Localhost API Server"
        }
    ],
    "paths": {
        "/submit-answer": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Saves question and option based on exam_id",
                "description": "Stores answers submitted by a student for a particular exam.",
                "operationId": "submitStudentAnswers",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exam_id",
                                    "question_id",
                                    "answer_id"
                                ],
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            180665,
                                            180666
                                        ]
                                    },
                                    "question_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            180665,
                                            180666
                                        ]
                                    },
                                    "option_id": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            684213,
                                            684220
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "409": {
                        "description": "If student exam has been completed or the requested question has already been answered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Student has already submitted answers for this exam."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Requested questions has already been answered."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Form validation error / Request question and answer Array lengths don't match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No. of questions must be equal to No. of options."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Validation Errror."
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": "false."
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "If answered saved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Answer Saved Successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "If All questions has been answered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "All questions has been answered"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Answers submitted successfully!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/view-solutions/{exam_id}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Fetch answers for a specific exam",
                "description": "Fetch all answers for the given exam for the authenticated student.",
                "operationId": "getResultsWithExam",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exam_id",
                        "in": "path",
                        "description": "The unique identifier of the exam",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved solutions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer"
                                                    },
                                                    "student_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No solutions found for this exam",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No solutions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Fetch all questions based on the user's stream",
                "operationId": "5f8975f74f0dd4ec19f65c2eea3847af",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of questions"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/myquestions": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Fetch all questions created by me",
                "operationId": "c9e58b3446dbf1f37afac09db1dcf2c6",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of questions created by me"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/addquestion": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "summary": "Add a new question",
                "description": "Adds a new question to the forum for the authenticated user.",
                "operationId": "addQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question"
                                ],
                                "properties": {
                                    "question": {
                                        "description": "The question to be added.",
                                        "type": "string",
                                        "example": "What is the best way to improve my coding skills?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question added successfully"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the best way to improve my coding skills?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Computer Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student profile not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "question": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/edit/{id}": {
            "put": {
                "tags": [
                    "Forum"
                ],
                "summary": "Update a question by its ID if only created Question by Authenticated user",
                "description": "Update a question created by the authenticated user. Performs validation for uniqueness, stream type, and updates the question details.",
                "operationId": "updateQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Request body to update the question",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "example": "What is the capital of Nepal?"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question updated successfully"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Stream type does not match for the student",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Stream type does not match for the student"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found or already deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found or already deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors in the request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "question": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "The user has already created this question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You have already created this question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/their/{id}": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Get a question by its ID Created By authenticated user",
                "description": "Fetch the details of a question if the authenticated user is the owner. Unauthorized access will return a 403 response.",
                "operationId": "getQuestionByTheirId",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be fetched",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question details"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized access, the user is not the owner of the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "You are not authorized to access this question"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/questions/{id}": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Get a question by its ID",
                "description": "Fetch the details of a specific question by its ID. Only the owner of the question can view the details.",
                "operationId": "getQuestionById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question details fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question details"
                                        },
                                        "question": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "stream": {
                                                    "type": "string",
                                                    "example": "Science"
                                                },
                                                "deleted": {
                                                    "type": "integer",
                                                    "example": 0
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid ID format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Forum"
                ],
                "summary": "Delete a question by its ID",
                "description": "Deletes a question if the authenticated user is the owner of the question.",
                "operationId": "deleteTheirQuestionCreated",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized or Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized or Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/answers": {
            "post": {
                "tags": [
                    "Forum"
                ],
                "summary": "Add an answer to a question",
                "description": "Allows authenticated students to add an answer to a specified question in the forum.",
                "operationId": "addAnswer",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "answer"
                                ],
                                "properties": {
                                    "question_id": {
                                        "description": "ID of the question being answered.",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "answer": {
                                        "description": "The answer to the question.",
                                        "type": "string",
                                        "example": "To improve your coding skills, practice daily and engage with community projects."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Answer added successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Answer added successfully!"
                                        },
                                        "answer": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "answer": {
                                                    "type": "string",
                                                    "example": "To improve your coding skills, practice daily and engage with community projects."
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-21T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-21T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "question_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question id field is required"
                                                    }
                                                },
                                                "answer": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The answer field is required"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/forum-question-view-increment/{id}": {
            "get": {
                "tags": [
                    "Forum"
                ],
                "summary": "Forum question view incrementor",
                "operationId": "a36e3109932a70736a0ef76fd7a2132b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "question id",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "View incremented successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "view incremented"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/register": {
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "User Registration",
                "description": "Register a new user with username, password, fullname, email, and role. Triggers email verification.",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "password_confirmation",
                                    "fullname",
                                    "email",
                                    "role"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "john_doe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "fullname": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "role": {
                                        "type": "string",
                                        "example": "teacher"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully. Please verify your email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "User already registered with this email",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User already registered with this email."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/student/login": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Login Student",
                "description": "Authenticate a student and return a JWT token",
                "operationId": "loginStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password",
                                    "fcm_token"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "dhurbac66@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Nepal123#"
                                    },
                                    "fcm_token": {
                                        "type": "string",
                                        "example": "Q8nR457CD"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_generated_jwt_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/admin/login": {
            "post": {
                "tags": [
                    "Admin Authentication"
                ],
                "summary": "Login Admin",
                "description": "Authenticate a admin and return a JWT token",
                "operationId": "loginAdmin",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@examsnepal.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "Nepal123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "your_generated_jwt_token"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Incorrect password"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "user not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teacher/login": {
            "post": {
                "tags": [
                    "Teacher Authentication"
                ],
                "summary": "Login Teachers",
                "description": "Authenticate a admin and return a JWT token",
                "operationId": "loginTeachers",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "hariofhungi@gmail.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Login",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "username": {
                                                            "type": "string",
                                                            "example": "teacher"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "info@examsnepal.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "welcome, teacher"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student/logout": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Logout Student",
                "description": "Invalidates the JWT token to log out the student.",
                "operationId": "29c81c6c2100cbaaa3bd5bbcdf69c26b",
                "responses": {
                    "200": {
                        "description": "Successfully logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not log out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not log out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student/refresh": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Refresh Student Token",
                "description": "Generates a new access token using the old (expired) token.",
                "operationId": "b45cf46ec135be91f9deab8ec873a7b2",
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth-student": {
            "get": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Get auth student info",
                "description": "Retrieve auth student info.",
                "operationId": "authStudent",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Free quizzes retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "exam_name": {
                                                                "type": "string",
                                                                "example": "Math Quiz"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "free"
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 12
                                                                    },
                                                                    "fullname": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/all-question-banks": {
            "get": {
                "tags": [
                    "Question Banks"
                ],
                "summary": "Get all question banks",
                "description": "Returns a list of exams that are marked as question banks",
                "operationId": "getQuestionBanks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of all Question Banks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "is_question_bank": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/question-bank": {
            "post": {
                "tags": [
                    "Question Banks"
                ],
                "summary": "Create a new Question Bank",
                "description": "Creates a question bank by storing it in the exams table with is_question_bank set to true.",
                "operationId": "storeQuestionBank",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "assign_id",
                                    "question_bank_name",
                                    "exam_type_id"
                                ],
                                "properties": {
                                    "assign_id": {
                                        "description": "Assigned user's ID",
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_bank_name": {
                                        "description": "Name of the question bank",
                                        "type": "string",
                                        "example": "Physics MCQs Bank"
                                    },
                                    "exam_type_id": {
                                        "description": "Type ID of the exam (foreign key)",
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question Bank created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Bank created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 12
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Physics MCQs Bank"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": null
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "is_question_bank": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to store Question Bank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to store Question Bank"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation ..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/question-bank/{id}": {
            "get": {
                "tags": [
                    "Question Banks"
                ],
                "summary": "Get a specific Question Bank",
                "description": "Fetch a Question Bank by its ID",
                "operationId": "getQuestionBankById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Question Bank",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question Bank fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Bank fetched successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "General Knowledge Bank"
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "is_question_bank": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Question Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Question Banks"
                ],
                "summary": "Update a Question Bank",
                "description": "Update the details of a specific Question Bank by its ID",
                "operationId": "updateQuestionBank",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Question Bank to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "assign_id",
                                    "question_bank_name",
                                    "exam_type_id"
                                ],
                                "properties": {
                                    "assign_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_bank_name": {
                                        "type": "string",
                                        "example": "Updated Bank Title"
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question Bank updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Question Bank updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Updated Bank Title"
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "is_question_bank": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Question Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update Question Bank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update Question Bank"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exception message..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Question Banks"
                ],
                "summary": "Delete a Question Bank",
                "description": "Deletes a specific question bank by its ID.",
                "operationId": "deleteQuestionBank",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the Question Bank to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 5
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bank deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bank deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bank not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Bank not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete bank",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete bank"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exception message..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/blog": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Fetch all list of blogs",
                "description": "Fetch all blogs with title,excerpt and timestamps",
                "operationId": "BlogList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved solutions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer"
                                                    },
                                                    "student_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No solutions found for this exam",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No solutions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/blog/{blog}": {
            "get": {
                "tags": [
                    "Blog"
                ],
                "summary": "Show blog",
                "description": "Show a blog based on its slug",
                "operationId": "ShowBlog",
                "parameters": [
                    {
                        "name": "blog",
                        "in": "path",
                        "description": "Slug of a blog",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "title-of-the-blog"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved solutions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer"
                                                    },
                                                    "student_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No solutions found for this exam",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No solutions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookmarks": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks with question and student details",
                "operationId": "e324077332db101556bb3d52193f34e4",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "exam_id": {
                                                "type": "integer",
                                                "example": 55
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 302
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 302
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "What is Laravel?"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Laravel is a PHP framework..."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "student": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "johndoe@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17T10:00:00.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Create a new bookmark",
                "description": "Stores a new bookmark.",
                "operationId": "storeBookmark",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "user_id",
                                    "question_id"
                                ],
                                "properties": {
                                    "student_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Bookmark created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Bookmark created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "student_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 101
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/bookmarks/{id}": {
            "delete": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Delete a bookmark",
                "operationId": "deleteBookmark",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmark deleted successfully"
                    },
                    "404": {
                        "description": "Bookmark not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                }
            }
        },
        "/bookmarks/student/{student_id}": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get bookmarks by student ID",
                "description": "Fetches all bookmarks associated with a given student ID",
                "operationId": "d01d5366a11e24224cd352d71c5c821b",
                "parameters": [
                    {
                        "name": "student_id",
                        "in": "path",
                        "description": "ID of the student whose bookmarks are to be retrieved",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_id": {
                                                "type": "integer",
                                                "example": 5
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 10
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17 10:00:00"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17 10:00:00"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid student ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookmarks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No bookmarks found for the given student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bookmarks/allmy": {
            "get": {
                "tags": [
                    "Bookmarks"
                ],
                "summary": "Get all bookmarks for the authenticated user",
                "description": "Fetches all bookmarks for the authenticated user.",
                "operationId": "getAllMyBookmarks",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bookmarks retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-04T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-04T12:00:00Z"
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "What is Laravel?"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "Can someone explain what Laravel is?"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not Authenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No bookmarks found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "No bookmarks found for the given student ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/corporate/login": {
            "post": {
                "tags": [
                    "CorporateLogin"
                ],
                "summary": "Login form for corporate user(Note: role 5 is for corporate)",
                "description": "Login form for corporate user",
                "operationId": "corporateLogin",
                "requestBody": {
                    "description": "Corporate Exam data to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "corporate@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Corporate@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 197
                                                        },
                                                        "username": {
                                                            "type": "string",
                                                            "example": "corp"
                                                        },
                                                        "fullname": {
                                                            "type": "string",
                                                            "example": "CORPORATE"
                                                        },
                                                        "email": {
                                                            "type": "string",
                                                            "example": "corporate@example.com"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "token": {
                                                    "type": "string",
                                                    "example": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ..."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "logged in successfull"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/corporate/exam": {
            "get": {
                "tags": [
                    "CorporateExams"
                ],
                "summary": "Fetch all exams of a corporate",
                "description": "Fetch all exams of a corporate",
                "operationId": "CorporateExamsList",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    },
                    {
                        "name": "published",
                        "in": "query",
                        "description": "Corporate exam of status: published",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of corporate exams for a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "corporate exam NO 51"
                                                            },
                                                            "exam_date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-07-09"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:00:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "14:00:00"
                                                            },
                                                            "participant_count": {
                                                                "type": "integer",
                                                                "example": 10
                                                            },
                                                            "section_count": {
                                                                "type": "integer",
                                                                "example": 25
                                                            },
                                                            "question_count": {
                                                                "type": "integer",
                                                                "example": 75
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam of user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "CorporateExams"
                ],
                "summary": "Create a new corporate exam",
                "description": "Store a new corporate exam in the database.",
                "operationId": "createCorporateExam",
                "requestBody": {
                    "description": "Corporate Exam data to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "exam_date",
                                    "start_time",
                                    "duration",
                                    "is_published"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "corporate exam NO 1"
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-09"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": "lorem ipsum dolor"
                                    },
                                    "rules": {
                                        "type": "string",
                                        "example": "lorem ipsum dolor"
                                    },
                                    "is_published": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Corporate exam added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/corporate/exam/{exam}": {
            "put": {
                "tags": [
                    "CorporateExams"
                ],
                "summary": "Update an existing exam",
                "description": "Update an exam's details in the database.",
                "operationId": "updateCorporateExam",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "ID of the exam to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "exam_date",
                                    "start_time",
                                    "duration",
                                    "is_published"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "corporate exam NO 1"
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-09"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "14:00"
                                    },
                                    "about": {
                                        "type": "string",
                                        "example": "lorem ipsum dolor"
                                    },
                                    "rules": {
                                        "type": "string",
                                        "example": "lorem ipsum dolor"
                                    },
                                    "is_published": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Corporate exam updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "CorporateExams"
                ],
                "summary": "Delete an corporate exam by ID",
                "description": "Delete an corporate exam from(exam id)",
                "operationId": "deleteCorporateExam",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "ID of the exam to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporate exam deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/corporate/exam/section/list/{exam}": {
            "get": {
                "tags": [
                    "corporateExamSection"
                ],
                "summary": "Fetch all exams of a corporate",
                "description": "Fetch all exams of a corporate",
                "operationId": "CorporateExamsSectionList",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "Corprate exam ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of corporate exams for a user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 4
                                                            },
                                                            "corporate_id": {
                                                                "type": "integer",
                                                                "example": 197
                                                            },
                                                            "title": {
                                                                "type": "string",
                                                                "example": "corporate exam NO 51"
                                                            },
                                                            "exam_date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-07-09"
                                                            },
                                                            "start_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "10:00:00"
                                                            },
                                                            "end_time": {
                                                                "type": "string",
                                                                "format": "time",
                                                                "example": "14:00:00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 2
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam of user"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/corporate/exam/section": {
            "post": {
                "tags": [
                    "corporateExamSection"
                ],
                "summary": "Create a new corporate exam",
                "description": "Store a new corporate exam section in the database.",
                "operationId": "corporateExamSectionCreate",
                "requestBody": {
                    "description": "Corporate Exam data to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "corporate_exam_id",
                                    "title",
                                    "detail"
                                ],
                                "properties": {
                                    "corporate_exam_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Exam section A-45"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "Exam section A-45 desctiption"
                                    },
                                    "is_published": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Corporate exam added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/corporate/exam/section/{section}": {
            "put": {
                "tags": [
                    "corporateExamSection"
                ],
                "summary": "Update an existing exam",
                "description": "Update an exam's details in the database.",
                "operationId": "corporateExamSectionUpdate",
                "parameters": [
                    {
                        "name": "section",
                        "in": "path",
                        "description": "ID of the corporate exam section to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "corporate_exam_id",
                                    "title",
                                    "detail"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Exam section A-45"
                                    },
                                    "detail": {
                                        "type": "string",
                                        "example": "Exam section A-45 desctiption"
                                    },
                                    "is_published": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Corporate exam updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam updated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "corporateExamSection"
                ],
                "summary": "Delete an corporate exam by ID",
                "description": "Delete an corporate exam from(exam id)",
                "operationId": "corporateExamSectionDelete",
                "parameters": [
                    {
                        "name": "section",
                        "in": "path",
                        "description": "ID of the exam to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Corporate exam deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "corporate exam deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doubt/student/solved": {
            "get": {
                "tags": [
                    "Doubts"
                ],
                "summary": "Get logged in student question solved doubts",
                "operationId": "0f80bda663c3def5c2d7992831d3fe39",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "exam_id": {
                                                "type": "integer",
                                                "example": 55
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 302
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 302
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "What is Laravel?"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Laravel is a PHP framework..."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "student": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "johndoe@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17T10:00:00.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doubt/student/unsolved": {
            "get": {
                "tags": [
                    "Doubts"
                ],
                "summary": "Get logged in student question unsolved doubts",
                "operationId": "121f6da9dde847773b59b7b8d0580d75",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of bookmarks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "student_id": {
                                                "type": "integer",
                                                "example": 101
                                            },
                                            "exam_id": {
                                                "type": "integer",
                                                "example": 55
                                            },
                                            "question_id": {
                                                "type": "integer",
                                                "example": 302
                                            },
                                            "question": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 302
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "example": "What is Laravel?"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "example": "Laravel is a PHP framework..."
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "student": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 101
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "johndoe@example.com"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-17T10:00:00.000000Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doubts": {
            "get": {
                "tags": [
                    "Doubts"
                ],
                "summary": "Get all doubts",
                "operationId": "4aea25c6dd2c9637f46829567b591f38",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched all doubts successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched all doubts successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doubt": {
            "post": {
                "tags": [
                    "Doubts"
                ],
                "summary": "Create a new doubt(Student)",
                "description": "Creates a new doubt in the system.",
                "operationId": "b817bdf04909422feee1bf3f3cb8b8ca",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "doubt",
                                    "exam_id",
                                    "org_id",
                                    "question_id"
                                ],
                                "properties": {
                                    "doubt": {
                                        "type": "string",
                                        "example": "This is a sample doubt."
                                    },
                                    "question_id": {
                                        "type": "integer",
                                        "example": 101
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Doubt successfully created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Doubt successfully created"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "doubt": {
                                                    "type": "string",
                                                    "example": "This is a sample doubt."
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "org_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question_id": {
                                                    "type": "integer",
                                                    "example": 101
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "1"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-25T00:00:00.000000Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-25T00:00:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "doubt": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The doubt field is required."
                                                    }
                                                },
                                                "exam_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The exam id must exist in the exams table."
                                                    }
                                                },
                                                "org_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The org id must exist in the organizations table."
                                                    }
                                                },
                                                "question_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The question id must exist in the questions table."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected error occurred",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Error message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/doubt/{id}": {
            "get": {
                "tags": [
                    "Doubts"
                ],
                "summary": "Get a specific doubt",
                "operationId": "dc8bef1ba9a39658d6c13a2f7ef3ccc1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Doubt ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fetched resource successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Fetched resource successfully."
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category-types": {
            "get": {
                "tags": [
                    "ExamCategory"
                ],
                "summary": "Get all exam category types",
                "description": "Fetches a list of exams categories.",
                "operationId": "exam_category",
                "responses": {
                    "200": {
                        "description": "Exam Category List",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 3
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "FREE_QUIZ"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "exam category list"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get all exams",
                "description": "Fetches a list of exams along with their associated organizations and exam types.",
                "operationId": "getExams",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Exams"
                ],
                "summary": "Create a new exam",
                "description": "Store a new exam in the database.",
                "operationId": "storeExam",
                "requestBody": {
                    "description": "Exam data to be stored",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "organization_id",
                                    "exam_type_id",
                                    "name",
                                    "exam_date",
                                    "exam_time"
                                ],
                                "properties": {
                                    "organization_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Mathematics Final Exam"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A detailed mathematics final exam."
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-06-15"
                                    },
                                    "exam_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "09:00:00"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 500
                                    },
                                    "test_type": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exam created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "organization_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Mathematics Final Exam"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A detailed mathematics final exam."
                                                },
                                                "exam_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-15"
                                                },
                                                "exam_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "09:00:00"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 500
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to store exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam/{id}": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get an exam by ID",
                "description": "Retrieve the details of a specific exam by its ID.",
                "operationId": "getExamById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "exam_date": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "exam_time": {
                                            "type": "string",
                                            "format": "time"
                                        },
                                        "is_active": {
                                            "type": "boolean"
                                        },
                                        "price": {
                                            "type": "integer"
                                        },
                                        "organization": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "exam_type": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Exams"
                ],
                "summary": "Update an existing exam",
                "description": "Update an exam's details in the database.",
                "operationId": "updateExam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam data to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "organization_id",
                                    "exam_type_id",
                                    "name",
                                    "exam_date",
                                    "exam_time"
                                ],
                                "properties": {
                                    "organization_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Mathematics Final Exam"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the mathematics final exam."
                                    },
                                    "exam_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-07-15"
                                    },
                                    "exam_time": {
                                        "type": "string",
                                        "format": "time",
                                        "example": "10:00:00"
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "price": {
                                        "type": "integer",
                                        "example": 600
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exam updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "organization_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Updated Mathematics Final Exam"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Updated description of the mathematics final exam."
                                                },
                                                "exam_date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-07-15"
                                                },
                                                "exam_time": {
                                                    "type": "string",
                                                    "format": "time",
                                                    "example": "10:00:00"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "price": {
                                                    "type": "integer",
                                                    "example": 600
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-01-01T12:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-07-01T12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Exams"
                ],
                "summary": "Delete an exam by ID",
                "description": "Delete an exam from the database by its ID.",
                "operationId": "deleteExam",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete exam"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-scorers/{exam}": {
            "get": {
                "tags": [
                    "Exams"
                ],
                "summary": "Get all exams scorers",
                "description": "Fetches all exams scorers.",
                "operationId": "GetExamScorers",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "ID of the exam",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-types": {
            "get": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Get all exam types",
                "description": "Retrieve a list of all exam types.",
                "operationId": "getExamTypes",
                "responses": {
                    "200": {
                        "description": "A list of exam types",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "mdms"
                                            },
                                            "is_active": {
                                                "type": "boolean",
                                                "example": true
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-01T12:00:00Z"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2025-03-01T12:00:00Z"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Create a new exam type (for Admin)",
                "description": "This endpoint creates a new exam type with a name and active status.",
                "operationId": "createExamType",
                "requestBody": {
                    "description": "Exam type creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the exam type",
                                        "type": "string",
                                        "example": "MCQ"
                                    },
                                    "is_active": {
                                        "description": "Whether the exam type is active or not",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Exam type created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (e.g., missing required fields)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The exam type name is required."
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The status is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/exam-types/{id}": {
            "get": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Get an exam type by ID (for Admin)",
                "description": "Retrieve the details of an exam type by its ID.",
                "operationId": "getExamTypeById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam type retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "MCQ"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:05:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Update an existing exam type (for Admin)",
                "description": "Update the details of an existing exam type.",
                "operationId": "updateExamType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "description": "Exam type update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the exam type",
                                        "type": "string",
                                        "example": "MCQ"
                                    },
                                    "is_active": {
                                        "description": "Whether the exam type is active or not",
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exam type updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "MCQ"
                                                },
                                                "is_active": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-01T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error (e.g., missing required fields)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The exam type name is required."
                                                    ]
                                                },
                                                "is_active": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    },
                                                    "example": [
                                                        "The status is required."
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Exam Types"
                ],
                "summary": "Delete an exam type (for Admin)",
                "description": "Delete an exam type by its ID.",
                "operationId": "deleteExamType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the exam type to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam type deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Exam type deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Exam type not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Exam type not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete exam type"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/migrate": {
            "get": {
                "tags": [
                    "AnswerSheet Migration"
                ],
                "summary": "Migrate old answer sheet data to new format",
                "description": "This endpoint migrates legacy answer sheet records from the old format (answersheet table) into the new answersheets table format.",
                "operationId": "migrateAnswersheets",
                "responses": {
                    "200": {
                        "description": "Migration completed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Migration completed successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Old answer sheet or student not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Old answer sheet or student not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Migration failed: {error_message}"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": [
                    "Notification"
                ],
                "summary": "Get all student notifications",
                "description": "Get all student notifications",
                "operationId": "StudentNotifications",
                "responses": {
                    "200": {
                        "description": "User notifications",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "example": "some title here"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "example": "some body here"
                                                    },
                                                    "notified_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-06-05 16:45:52"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User anonymous user notifications"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/organization": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get all organizations",
                "description": "Retrieve the list of all organizations.",
                "operationId": "getAllOrganizations",
                "responses": {
                    "200": {
                        "description": "List of organizations retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "email": {
                                                "type": "string"
                                            },
                                            "phone": {
                                                "type": "string"
                                            },
                                            "address": {
                                                "type": "string"
                                            },
                                            "is_active": {
                                                "type": "boolean"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve organizations"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Create a new organization",
                "description": "Create a new organization and store it in the database.",
                "operationId": "createOrganization",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "My Organization"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "info@org.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Organization St."
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Organization created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to create organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/organization/{id}": {
            "get": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Get an organization by ID",
                "description": "Retrieve the details of an organization by its ID.",
                "operationId": "getOrganizationById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                },
                                                "is_active": {
                                                    "type": "boolean"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to retrieve organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Update an organization",
                "description": "Update the details of an organization.",
                "operationId": "updateOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "is_active"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Org"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "updated@org.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Updated St."
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Organization updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Organizations"
                ],
                "summary": "Delete an organization",
                "description": "Delete an organization from the database.",
                "operationId": "deleteOrganization",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the organization to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organization deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Organization deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Organization not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Organization not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete organization"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/esewa/save-transaction": {
            "post": {
                "tags": [
                    "Esewa"
                ],
                "summary": "Saves student transactions",
                "description": "Saves student transactions.",
                "operationId": "esewaSaveTransaction",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "student_id",
                                    "productId",
                                    "productName",
                                    "totalAmount",
                                    "environment",
                                    "code",
                                    "merchantName",
                                    "message",
                                    "date",
                                    "status",
                                    "refId"
                                ],
                                "properties": {
                                    "studentId": {
                                        "type": "integer",
                                        "example": 12127
                                    },
                                    "productId": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "productName": {
                                        "type": "string",
                                        "example": "some name"
                                    },
                                    "totalAmount": {
                                        "type": "string",
                                        "example": "100.50"
                                    },
                                    "environment": {
                                        "type": "string",
                                        "example": "test"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "00"
                                    },
                                    "merchantName": {
                                        "type": "string",
                                        "example": "EPAYTEST"
                                    },
                                    "message": {
                                        "type": "string",
                                        "example": "1"
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "Fri May 30 12:46:57 NPT 2025"
                                    },
                                    "status": {
                                        "type": "string",
                                        "example": "COMPLETED"
                                    },
                                    "refId": {
                                        "type": "string",
                                        "example": "000ASZ5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Transaction saved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "student_profile_id": {
                                                    "type": "integer",
                                                    "example": 12127
                                                },
                                                "subscription_type_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "transaction_id": {
                                                    "type": "string",
                                                    "example": "000ASZ5"
                                                },
                                                "start_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-05-29T18:15:00.000000Z"
                                                },
                                                "end_date": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-06-29T18:15:00.000000Z"
                                                },
                                                "price": {
                                                    "type": "string",
                                                    "example": "110.00"
                                                },
                                                "paid": {
                                                    "type": "string",
                                                    "example": "100.50"
                                                },
                                                "subscribed_at": {
                                                    "type": "string",
                                                    "example": "2025-05-30 17:03:20"
                                                },
                                                "data": {
                                                    "properties": {
                                                        "studentId": {
                                                            "type": "integer",
                                                            "example": 12127
                                                        },
                                                        "productId": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "productName": {
                                                            "type": "string",
                                                            "example": "some name"
                                                        },
                                                        "totalAmount": {
                                                            "type": "string",
                                                            "example": "100.50"
                                                        },
                                                        "environment": {
                                                            "type": "string",
                                                            "example": "test"
                                                        },
                                                        "code": {
                                                            "type": "string",
                                                            "example": "00"
                                                        },
                                                        "merchantName": {
                                                            "type": "string",
                                                            "example": "EPAYTEST"
                                                        },
                                                        "message": {
                                                            "type": "string",
                                                            "example": "1"
                                                        },
                                                        "date": {
                                                            "type": "string",
                                                            "example": "Fri May 30 12:46:57 NPT 2025"
                                                        },
                                                        "status": {
                                                            "type": "string",
                                                            "example": "COMPLETED"
                                                        },
                                                        "refId": {
                                                            "type": "string",
                                                            "example": "000ASZ5"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Transaction saved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/request-pool-question": {
            "get": {
                "tags": [
                    "Pool"
                ],
                "summary": "Fetch a pool question",
                "description": "Fetch a pool question for user based on users exam id.",
                "operationId": "requestPoolQuestion",
                "parameters": [
                    {
                        "name": "token",
                        "in": "query",
                        "description": "pool question token",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "Fn4nT34n"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool question retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer"
                                                    },
                                                    "student_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No solutions found for this exam",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No solutions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/send-pool-response": {
            "post": {
                "tags": [
                    "Pool"
                ],
                "summary": "Send pool question response",
                "description": "Stores answers submitted by a student for a particular exam.",
                "operationId": "sendPoolResponse",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "question_id",
                                    "option_id"
                                ],
                                "properties": {
                                    "question_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "option_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "409": {
                        "description": "If student exam has been completed or the requested question has already been answered.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Student has already submitted answers for this exam."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Requested questions has already been answered."
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Form validation error / Request question and answer Array lengths don't match.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "No. of questions must be equal to No. of options."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Validation Errror."
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": "false."
                                                },
                                                "data": {
                                                    "type": "object",
                                                    "example": ""
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "201": {
                        "description": "If answered saved.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Answer Saved Successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "200": {
                        "description": "If All questions has been answered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "oneOf": [
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "All questions has been answered"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        {
                                            "properties": {
                                                "message": {
                                                    "type": "string",
                                                    "example": "Answers submitted successfully!"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get-todays-pool-players": {
            "get": {
                "tags": [
                    "Pool"
                ],
                "summary": "Fetch todays pool players",
                "description": "Fetch list of pool players.",
                "operationId": "getTodaysPoolPlayers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pool question retrieved",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Solutions retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer"
                                                    },
                                                    "student_id": {
                                                        "type": "integer"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No solutions found for this exam",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "No solutions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - The user is not authenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/verify-promo-code": {
            "post": {
                "tags": [
                    "PromoCode"
                ],
                "summary": "Api for verifying promo code",
                "description": "Api for verifying promo code.",
                "operationId": "verifyPromoCode",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "promo_code"
                                ],
                                "properties": {
                                    "promo_code": {
                                        "type": "string",
                                        "example": "VISITNEPAL2026"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Promo code information",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "code": {
                                                    "type": "string",
                                                    "example": "NEPALMEDIA25"
                                                },
                                                "discount_percent": {
                                                    "type": "string",
                                                    "example": "9.00"
                                                },
                                                "detail": {
                                                    "type": "string",
                                                    "example": "Nostrum velit id ratione dolorem cumque alias. Voluptatem nulla eaque dolores laborum quae."
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Promo code information"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get questions based on user exam type with pagination",
                "description": "Fetches questions for the authenticated user based on their exam type, with pagination support.",
                "operationId": "getQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is PHP?"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "pagination": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 25
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "next_page_url": {
                                                    "type": "string",
                                                    "example": "http://your-api.com/api/questions?page=2"
                                                },
                                                "prev_page_url": {
                                                    "type": "string",
                                                    "example": "null"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Student profile not found or no exams found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student profile not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Create a new question To Exams",
                "description": "This endpoint allows users to create a new question To Exams.",
                "operationId": "storeQuestion",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exam_id",
                                    "subject_id",
                                    "question",
                                    "option_1",
                                    "option_value_1",
                                    "option_2",
                                    "option_value_2"
                                ],
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "subject_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "What is the capital of Nepal?"
                                    },
                                    "option_1": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Kathmandu"
                                    },
                                    "option_value_1": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_2": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Pokhara"
                                    },
                                    "option_value_2": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "option_3": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Lalitpur",
                                        "nullable": true
                                    },
                                    "option_value_3": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "option_4": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Bhaktapur",
                                        "nullable": true
                                    },
                                    "option_value_4": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "Kathmandu is the capital of Nepal.",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Geography",
                                        "nullable": true
                                    },
                                    "exam_type": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "MCQ",
                                        "nullable": true
                                    },
                                    "remark": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Important question",
                                        "nullable": true
                                    },
                                    "serial": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "old_exam_id": {
                                        "type": "integer",
                                        "example": 123,
                                        "nullable": true
                                    },
                                    "uploader": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "mark_type": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Numerical",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question created successfully!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question created successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "option_1": {
                                                    "type": "string",
                                                    "example": "Kathmandu"
                                                },
                                                "option_value_1": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_2": {
                                                    "type": "string",
                                                    "example": "Pokhara"
                                                },
                                                "option_value_2": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "option_3": {
                                                    "type": "string",
                                                    "example": "Lalitpur",
                                                    "nullable": true
                                                },
                                                "option_value_3": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                },
                                                "option_4": {
                                                    "type": "string",
                                                    "example": "Bhaktapur",
                                                    "nullable": true
                                                },
                                                "option_value_4": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "nullable": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Kathmandu is the capital of Nepal.",
                                                    "nullable": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Geography",
                                                    "nullable": true
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "MCQ",
                                                    "nullable": true
                                                },
                                                "remark": {
                                                    "type": "string",
                                                    "example": "Important question",
                                                    "nullable": true
                                                },
                                                "serial": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "old_exam_id": {
                                                    "type": "integer",
                                                    "example": 123,
                                                    "nullable": true
                                                },
                                                "uploader": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "mark_type": {
                                                    "type": "string",
                                                    "example": "Numerical",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create Question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create Question. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions/all": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get all questions",
                "description": "Fetches all the questions from the database.",
                "operationId": "getAllQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is PHP?"
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No questions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No questions found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search-questions": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Search MCQs by keyword",
                "description": "Searches for multiple-choice questions (MCQs) based on a keyword using Full-Text Search.",
                "operationId": "searchQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "pagination",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    },
                    {
                        "name": "keyword",
                        "in": "query",
                        "description": "The keyword to search for MCQs",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "question": {
                                                                "type": "string",
                                                                "example": "What is Laravel?"
                                                            },
                                                            "options": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "correct_answer": {
                                                                "type": "string",
                                                                "example": "A PHP framework"
                                                            },
                                                            "exam_id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Keyword is required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Keyword is required"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No questions found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No questions found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/question-bank/questions": {
            "post": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Create a new question for the question bank",
                "description": "This endpoint allows users to create a new question in a valid question bank. The exam must be a question bank.",
                "operationId": "storeOnQuestionBank",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exam_id",
                                    "subject_id",
                                    "question",
                                    "option_1",
                                    "option_value_1",
                                    "option_2",
                                    "option_value_2"
                                ],
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "subject_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "What is the capital of Nepal?"
                                    },
                                    "option_1": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Kathmandu"
                                    },
                                    "option_value_1": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_2": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Pokhara"
                                    },
                                    "option_value_2": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "option_3": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Lalitpur",
                                        "nullable": true
                                    },
                                    "option_value_3": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "option_4": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Bhaktapur",
                                        "nullable": true
                                    },
                                    "option_value_4": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "Kathmandu is the capital of Nepal.",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Question created successfully in the question bank.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question created successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "option_1": {
                                                    "type": "string",
                                                    "example": "Kathmandu"
                                                },
                                                "option_value_1": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_2": {
                                                    "type": "string",
                                                    "example": "Pokhara"
                                                },
                                                "option_value_2": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "option_3": {
                                                    "type": "string",
                                                    "example": "Lalitpur",
                                                    "nullable": true
                                                },
                                                "option_value_3": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                },
                                                "option_4": {
                                                    "type": "string",
                                                    "example": "Bhaktapur",
                                                    "nullable": true
                                                },
                                                "option_value_4": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "nullable": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Kathmandu is the capital of Nepal.",
                                                    "nullable": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Geography",
                                                    "nullable": true
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "MCQ",
                                                    "nullable": true
                                                },
                                                "remark": {
                                                    "type": "string",
                                                    "example": "Important question",
                                                    "nullable": true
                                                },
                                                "serial": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "old_exam_id": {
                                                    "type": "integer",
                                                    "example": 123,
                                                    "nullable": true
                                                },
                                                "mark_type": {
                                                    "type": "string",
                                                    "example": "Numerical",
                                                    "nullable": true
                                                },
                                                "uploader": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "from_question_bank": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Unable to find question bank.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unable to find question bank."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exactly one option must have a true value."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create Question. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/questions/{id}": {
            "get": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Get a question by ID",
                "description": "This endpoint allows users to retrieve a specific question by its ID.",
                "operationId": "showQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to retrieve",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "1"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question retrieved successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "question": {
                                                    "type": "string",
                                                    "example": "What is the capital of Nepal?"
                                                },
                                                "option_1": {
                                                    "type": "string",
                                                    "example": "Kathmandu"
                                                },
                                                "option_value_1": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "option_2": {
                                                    "type": "string",
                                                    "example": "Pokhara"
                                                },
                                                "option_value_2": {
                                                    "type": "boolean",
                                                    "example": false
                                                },
                                                "option_3": {
                                                    "type": "string",
                                                    "example": "Lalitpur",
                                                    "nullable": true
                                                },
                                                "option_value_3": {
                                                    "type": "boolean",
                                                    "example": true,
                                                    "nullable": true
                                                },
                                                "option_4": {
                                                    "type": "string",
                                                    "example": "Bhaktapur",
                                                    "nullable": true
                                                },
                                                "option_value_4": {
                                                    "type": "boolean",
                                                    "example": false,
                                                    "nullable": true
                                                },
                                                "explanation": {
                                                    "type": "string",
                                                    "example": "Kathmandu is the capital of Nepal.",
                                                    "nullable": true
                                                },
                                                "subject": {
                                                    "type": "string",
                                                    "example": "Geography",
                                                    "nullable": true
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "MCQ",
                                                    "nullable": true
                                                },
                                                "remark": {
                                                    "type": "string",
                                                    "example": "Important question",
                                                    "nullable": true
                                                },
                                                "serial": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "old_exam_id": {
                                                    "type": "integer",
                                                    "example": 123,
                                                    "nullable": true
                                                },
                                                "uploader": {
                                                    "type": "integer",
                                                    "example": 1,
                                                    "nullable": true
                                                },
                                                "mark_type": {
                                                    "type": "string",
                                                    "example": "Numerical",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "No question found with the given ID"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to retrieve the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve the question. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Update a question",
                "description": "Update an existing question by ID.",
                "operationId": "updateExamQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "exam_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "question": {
                                        "type": "string",
                                        "example": "What is the capital of Nepal?"
                                    },
                                    "option_1": {
                                        "type": "string",
                                        "example": "Kathmandu"
                                    },
                                    "option_value_1": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "option_2": {
                                        "type": "string",
                                        "example": "Pokhara"
                                    },
                                    "option_value_2": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "option_3": {
                                        "type": "string",
                                        "example": "Lalitpur",
                                        "nullable": true
                                    },
                                    "option_value_3": {
                                        "type": "boolean",
                                        "example": true,
                                        "nullable": true
                                    },
                                    "option_4": {
                                        "type": "string",
                                        "example": "Bhaktapur",
                                        "nullable": true
                                    },
                                    "option_value_4": {
                                        "type": "boolean",
                                        "example": false,
                                        "nullable": true
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "Kathmandu is the capital of Nepal.",
                                        "nullable": true
                                    },
                                    "subject": {
                                        "type": "string",
                                        "example": "Geography",
                                        "nullable": true
                                    },
                                    "exam_type": {
                                        "type": "string",
                                        "example": "MCQ",
                                        "nullable": true
                                    },
                                    "remark": {
                                        "type": "string",
                                        "example": "Important question",
                                        "nullable": true
                                    },
                                    "serial": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "old_exam_id": {
                                        "type": "integer",
                                        "example": 123,
                                        "nullable": true
                                    },
                                    "uploader": {
                                        "type": "integer",
                                        "example": 1,
                                        "nullable": true
                                    },
                                    "mark_type": {
                                        "type": "string",
                                        "example": "Numerical",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question updated successfully!"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update the question. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MCQs"
                ],
                "summary": "Delete a question",
                "description": "Delete a question by its ID.",
                "operationId": "deleteExamQuestion",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the question to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Question deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Question not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete the question",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to delete the question. Please try again."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/free-quiz/questions/{exam_id}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get all active questions for a specific exam",
                "description": "This endpoint retrieves all active questions (status = 1) for a given exam by its ID.",
                "operationId": "freeQuizQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exam_id",
                        "in": "path",
                        "description": "ID of the exam to retrieve questions for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "token for security reason",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "fja6meujqoRgSDQBn7SqaEZ7h"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is the capital of Nepal?"
                                                    },
                                                    "option_1": {
                                                        "type": "string",
                                                        "example": "Kathmandu"
                                                    },
                                                    "option_value_1": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "option_2": {
                                                        "type": "string",
                                                        "example": "Pokhara"
                                                    },
                                                    "option_value_2": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "option_3": {
                                                        "type": "string",
                                                        "example": "Lalitpur",
                                                        "nullable": true
                                                    },
                                                    "option_value_3": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "nullable": true
                                                    },
                                                    "option_4": {
                                                        "type": "string",
                                                        "example": "Bhaktapur",
                                                        "nullable": true
                                                    },
                                                    "option_value_4": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "nullable": true
                                                    },
                                                    "explanation": {
                                                        "type": "string",
                                                        "example": "Kathmandu is the capital of Nepal.",
                                                        "nullable": true
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Geography",
                                                        "nullable": true
                                                    },
                                                    "exam_type": {
                                                        "type": "string",
                                                        "example": "MCQ",
                                                        "nullable": true
                                                    },
                                                    "remark": {
                                                        "type": "string",
                                                        "example": "Important question",
                                                        "nullable": true
                                                    },
                                                    "serial": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "old_exam_id": {
                                                        "type": "integer",
                                                        "example": 123,
                                                        "nullable": true
                                                    },
                                                    "mark_type": {
                                                        "type": "string",
                                                        "example": "Numerical",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active questions found for the specified exam ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active questions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve questions. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mock-test/questions/{exam_id}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get all active questions for a specific exam",
                "description": "This endpoint retrieves all active questions (status = 4) for a given exam by its ID.",
                "operationId": "mockTestQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exam_id",
                        "in": "path",
                        "description": "ID of the exam to retrieve questions for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "pagination token",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "kj8s7afd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is the capital of Nepal?"
                                                    },
                                                    "option_1": {
                                                        "type": "string",
                                                        "example": "Kathmandu"
                                                    },
                                                    "option_value_1": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "option_2": {
                                                        "type": "string",
                                                        "example": "Pokhara"
                                                    },
                                                    "option_value_2": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "option_3": {
                                                        "type": "string",
                                                        "example": "Lalitpur",
                                                        "nullable": true
                                                    },
                                                    "option_value_3": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "nullable": true
                                                    },
                                                    "option_4": {
                                                        "type": "string",
                                                        "example": "Bhaktapur",
                                                        "nullable": true
                                                    },
                                                    "option_value_4": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "nullable": true
                                                    },
                                                    "explanation": {
                                                        "type": "string",
                                                        "example": "Kathmandu is the capital of Nepal.",
                                                        "nullable": true
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Geography",
                                                        "nullable": true
                                                    },
                                                    "exam_type": {
                                                        "type": "string",
                                                        "example": "MCQ",
                                                        "nullable": true
                                                    },
                                                    "remark": {
                                                        "type": "string",
                                                        "example": "Important question",
                                                        "nullable": true
                                                    },
                                                    "serial": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "old_exam_id": {
                                                        "type": "integer",
                                                        "example": 123,
                                                        "nullable": true
                                                    },
                                                    "mark_type": {
                                                        "type": "string",
                                                        "example": "Numerical",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active questions found for the specified exam ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active questions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve questions. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sprint-quiz/questions/{exam_id}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get all active questions for a specific exam",
                "description": "This endpoint retrieves all active questions (status = 3) for a given exam by its ID.",
                "operationId": "sprintQuizQuestions",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "exam_id",
                        "in": "path",
                        "description": "ID of the exam to retrieve questions for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "description": "pagination token",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "kj8s7afd"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Questions retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Questions retrieved successfully!"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "question": {
                                                        "type": "string",
                                                        "example": "What is the capital of Nepal?"
                                                    },
                                                    "option_1": {
                                                        "type": "string",
                                                        "example": "Kathmandu"
                                                    },
                                                    "option_value_1": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "option_2": {
                                                        "type": "string",
                                                        "example": "Pokhara"
                                                    },
                                                    "option_value_2": {
                                                        "type": "boolean",
                                                        "example": false
                                                    },
                                                    "option_3": {
                                                        "type": "string",
                                                        "example": "Lalitpur",
                                                        "nullable": true
                                                    },
                                                    "option_value_3": {
                                                        "type": "boolean",
                                                        "example": true,
                                                        "nullable": true
                                                    },
                                                    "option_4": {
                                                        "type": "string",
                                                        "example": "Bhaktapur",
                                                        "nullable": true
                                                    },
                                                    "option_value_4": {
                                                        "type": "boolean",
                                                        "example": false,
                                                        "nullable": true
                                                    },
                                                    "explanation": {
                                                        "type": "string",
                                                        "example": "Kathmandu is the capital of Nepal.",
                                                        "nullable": true
                                                    },
                                                    "subject": {
                                                        "type": "string",
                                                        "example": "Geography",
                                                        "nullable": true
                                                    },
                                                    "exam_type": {
                                                        "type": "string",
                                                        "example": "MCQ",
                                                        "nullable": true
                                                    },
                                                    "remark": {
                                                        "type": "string",
                                                        "example": "Important question",
                                                        "nullable": true
                                                    },
                                                    "serial": {
                                                        "type": "integer",
                                                        "example": 1,
                                                        "nullable": true
                                                    },
                                                    "old_exam_id": {
                                                        "type": "integer",
                                                        "example": 123,
                                                        "nullable": true
                                                    },
                                                    "mark_type": {
                                                        "type": "string",
                                                        "example": "Numerical",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No active questions found for the specified exam ID",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No active questions found for this exam."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to retrieve questions. Please try again."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Database error or other internal error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/free-quiz/completed": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Completed Free Quiz",
                "description": "Retrieve a paginated list of free quizzes.",
                "operationId": "getCompletedFreeQuiz",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Free quizzes retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "exam_name": {
                                                                "type": "string",
                                                                "example": "Math Quiz"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "free"
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 12
                                                                    },
                                                                    "fullname": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/free-quiz/pending": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Pending Free Quiz",
                "description": "Retrieve a paginated list of free quizzes.",
                "operationId": "getPendingFreeQuiz",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Free quizzes retrieved successfully."
                                        },
                                        "data": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "exam_name": {
                                                                "type": "string",
                                                                "example": "Math Quiz"
                                                            },
                                                            "status": {
                                                                "type": "string",
                                                                "example": "free"
                                                            },
                                                            "user_id": {
                                                                "type": "integer",
                                                                "example": 12
                                                            },
                                                            "user": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 12
                                                                    },
                                                                    "fullname": {
                                                                        "type": "string",
                                                                        "example": "John Doe"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 50
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/sprint-quiz/completed": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Completed Sprint Quizzes (for users)",
                "description": "Retrieve a list of sprint quizzes. Requires an active subscription.",
                "operationId": "getCompletedSprintQuiz",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sprint quizzes retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_name": {
                                                        "type": "string",
                                                        "example": "Sprint Test 1"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "3"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "fullname": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Subscription Inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your subscription is inactive. Please subscribe to access sprint quizzes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/sprint-quiz/pending": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Pending Sprint Quizzes (for users)",
                "description": "Retrieve a list of pending sprint quizzes. Requires an active subscription.",
                "operationId": "getPendingSprintQuiz",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Sprint quizzes retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_name": {
                                                        "type": "string",
                                                        "example": "Sprint Test 1"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "3"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "fullname": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Subscription Inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your subscription is inactive. Please subscribe to access sprint quizzes."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/mock-test/completed": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Completed Mock Tests (for users)",
                "description": "Retrieve a list of Completed Mock Tests.",
                "operationId": "getCompletedMockTests",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mock Tests retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_name": {
                                                        "type": "string",
                                                        "example": "Mock Tests 1"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "3"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "fullname": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Subscription Inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your subscription is inactive. Please subscribe to access Mock Tests."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/mock-test/pending": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get Pending Mock Tests (for users)",
                "description": "Retrieve a list of Pending Mock Tests.",
                "operationId": "getPendingMockTests",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Mock Tests retrieved successfully."
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "exam_name": {
                                                        "type": "string",
                                                        "example": "Mock Tests 1"
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "example": "3"
                                                    },
                                                    "user": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 5
                                                            },
                                                            "fullname": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            }
                                                        },
                                                        "type": "object",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Subscription Inactive",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Your subscription is inactive. Please subscribe to access Mock Tests."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/create-quiz": {
            "post": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Create a quiz",
                "description": "Creates a quiz. (Admin)",
                "operationId": "examAsQuizStore",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "assign_id",
                                    "quiz_name",
                                    "status",
                                    "exam_type_id"
                                ],
                                "properties": {
                                    "assign_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quiz_name": {
                                        "type": "string",
                                        "example": "Science Quiz A"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Quiz stored successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz stored successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Science Quiz A"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "is_question_bank": {
                                                    "type": "integer",
                                                    "example": 0
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "quiz_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The quiz name field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/update-quiz/{id}": {
            "put": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Update a Quiz (Admin)",
                "description": "Update the details of an existing quiz by its ID",
                "operationId": "updateExamAsQuiz",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the quiz to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "assign_id",
                                    "quiz_name",
                                    "status",
                                    "exam_type_id"
                                ],
                                "properties": {
                                    "assign_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "quiz_name": {
                                        "type": "string",
                                        "example": "Updated Quiz Name"
                                    },
                                    "status": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Quiz updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Updated Quiz Name"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Quiz not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Validation failed"
                                        },
                                        "errors": {
                                            "properties": {
                                                "assign_id": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "quiz_name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to update Quiz",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to update Quiz"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exception message..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/quiz/{id}": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get a Quiz by ID (Admin)",
                "description": "Retrieve the details of a specific quiz (exam) by its ID",
                "operationId": "getQuizById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the quiz to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz found successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz found successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "exam_name": {
                                                    "type": "string",
                                                    "example": "Sample Quiz"
                                                },
                                                "status": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "assign_id": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "exam_type_id": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Quiz not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Delete a Quiz by ID (Admin)",
                "description": "Delete a specific quiz (exam) by its ID",
                "operationId": "deleteQuizById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the quiz to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 3
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Quiz deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Quiz deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Quiz not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Quiz not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to delete Quiz",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Failed to delete Quiz"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Exception message..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/user-free-exams-status": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get user's each free exams completed status",
                "description": "Fetches list of free exams(no of free exam completed)",
                "operationId": "userFreeExamsStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of completed free exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user-sprint-exams-status": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get user's each sprint exams completed status",
                "description": "Fetches list of sprint exams(no of sprint exam completed)",
                "operationId": "userSprintExamsStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of completed sprint exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user-mock-exams-status": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get user's each mock exams completed status",
                "description": "Fetches list of mock exams(no of mock exam completed)",
                "operationId": "userMockExamsStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of completed sprint exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/total-exam-count": {
            "get": {
                "tags": [
                    "Quiz"
                ],
                "summary": "Get total number of each exams",
                "description": "get total number of each exams.",
                "operationId": "totalExamCount",
                "responses": {
                    "200": {
                        "description": "Available Exams with their total",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "free": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 15
                                                        },
                                                        "overall": {
                                                            "type": "integer",
                                                            "example": 100
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "sprint": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 29
                                                        },
                                                        "overall": {
                                                            "type": "integer",
                                                            "example": 100
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "mock": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 341
                                                        },
                                                        "overall": {
                                                            "type": "integer",
                                                            "example": 0
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "avg_score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 49.01
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Available Exams with their total"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/student/register": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Register a new student",
                "description": "This endpoint allows you to register a new student by providing necessary details.",
                "operationId": "registerStudent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "exam_type_id"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone": {
                                        "type": "string",
                                        "example": "+1234567890"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/all-students": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get all students",
                "description": "Retrieve a list of all students from the StudentProfile model.",
                "operationId": "getAllStudents",
                "responses": {
                    "200": {
                        "description": "Students list fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Students List fetched successfully."
                                        },
                                        "students": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "fullname": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "johndoe@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+977-9800000000"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/student-profile-fetcher": {
            "get": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Get Student Info",
                "description": "Retrieve a students information.",
                "operationId": "studentProfileFetcher",
                "responses": {
                    "200": {
                        "description": "Students information fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Students List fetched successfully."
                                        },
                                        "students": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "fullname": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "format": "email",
                                                        "example": "johndoe@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+977-9800000000"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/update-student-profile": {
            "put": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Update Student Profile",
                "description": "This endpoint allows you to update student profile.",
                "operationId": "updateStudentProfile",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "phone"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "phone": {
                                        "type": "integer",
                                        "format": "number",
                                        "example": "123456789"
                                    },
                                    "previous_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123previous"
                                    },
                                    "new_password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    },
                                    "new_password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student-password-reset": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Password reset form(sending email)",
                "description": "This endpoint allows you to send message to student email which contains a token.",
                "operationId": "studentPasswordReset",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "email",
                                        "example": "tester.123@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/verify-password-reset-otp": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Send password reset token for verification",
                "description": "This endpoint checks token received from email which was sent for password reset token.",
                "operationId": "verifyPasswordResetOtp",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "C1EW5"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/handle-password-reset-form": {
            "post": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Handles password reset form",
                "description": "This endpoint handle password reset form.",
                "operationId": "handlePasswordResetForm",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "token",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "token": {
                                        "type": "string",
                                        "example": "EC1D0"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "tester@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "secret"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "example": "secret"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Student successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Student registered successfully."
                                        },
                                        "student": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "johndoe@example.com"
                                                },
                                                "phone": {
                                                    "type": "string",
                                                    "example": "+1234567890"
                                                },
                                                "exam_type": {
                                                    "type": "string",
                                                    "example": "mdms"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email has already been taken."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation does not match."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/student-account-removal/{student}": {
            "delete": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Removes currently logged in student account permanently",
                "description": "Removed student account.",
                "operationId": "66095543c680588ed2e90646a5dd0ab8",
                "parameters": [
                    {
                        "name": "student",
                        "in": "path",
                        "description": "ID of the student",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "New access token generated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "bearer"
                                        },
                                        "expires_in": {
                                            "type": "integer",
                                            "example": 3600
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Could not refresh token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Could not refresh token"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/student-exams-stats": {
            "get": {
                "tags": [
                    "Student Authentication"
                ],
                "summary": "Get an student exams stats",
                "description": "Fetches a list of exams of a student with its statistics.",
                "operationId": "studentExamsStats",
                "responses": {
                    "200": {
                        "description": "List of exams retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "exam_name": {
                                                "type": "string",
                                                "example": "Math Final"
                                            },
                                            "exam_date": {
                                                "type": "string",
                                                "format": "date",
                                                "example": "2025-06-10"
                                            },
                                            "organization": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "ABC University"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "examType": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Final Exam"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Internal server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get-student-performance-data": {
            "get": {
                "tags": [
                    "Students"
                ],
                "summary": "Get student performance report",
                "description": "Retrieve student performance report.",
                "operationId": "studentPerformanceReport",
                "responses": {
                    "200": {
                        "description": "Performance data for user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "exams_given": {
                                                                "type": "integer",
                                                                "example": 51
                                                            },
                                                            "total_questions": {
                                                                "type": "integer",
                                                                "example": 7340
                                                            },
                                                            "correct_answers": {
                                                                "type": "integer",
                                                                "example": 3553
                                                            },
                                                            "exam_type": {
                                                                "type": "string",
                                                                "example": "MOCK_TEST"
                                                            },
                                                            "average_score": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 48.41
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "total_average_score": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 49.01
                                                },
                                                "total_exams": {
                                                    "type": "integer",
                                                    "example": 2129
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "performance data for user : Sandy"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subjects": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get list of all subjects",
                "operationId": "53e4736f6088ff2d20d447af79810328",
                "responses": {
                    "200": {
                        "description": "List of subjects retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Mathematics"
                                                    },
                                                    "code": {
                                                        "type": "string",
                                                        "example": "MATH101"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Basic Mathematics"
                                                    },
                                                    "status": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-19T12:00:00Z"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "example": "2025-03-19T12:30:00Z"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subject": {
            "post": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Create a new subject",
                "operationId": "d408fb1b4958123bf1d5cf3f774e33ab",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Physics"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "PHY101"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Basic Physics Course"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Subject created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject created successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Physics"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "PHY101"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Basic Physics Course"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:00:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The code has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/subject/{id}": {
            "get": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Get details of a specific subject",
                "operationId": "9541bfef1e6079847725830e5d93b22d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Mathematics"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "MATH101"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Basic Mathematics Course"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subject not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Update an existing subject",
                "operationId": "4714951461f8b03f716f8c6b74ddfe93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Advanced Mathematics"
                                    },
                                    "code": {
                                        "type": "string",
                                        "example": "MATH102"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Advanced level Mathematics"
                                    },
                                    "status": {
                                        "type": "boolean",
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subject updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject updated successfully!"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "Advanced Mathematics"
                                                },
                                                "code": {
                                                    "type": "string",
                                                    "example": "MATH102"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "Advanced level Mathematics"
                                                },
                                                "status": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:00:00Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-03-19T12:30:00Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subject not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "code": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The code has already been taken."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Subjects"
                ],
                "summary": "Delete a specific subject",
                "operationId": "61afd9e5d731fe4047f01ebd7f4598a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the subject to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subject deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject deleted successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Subject not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Subject not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user-subscription-status": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Fetch student subscription",
                "description": "Fetch student subscription",
                "operationId": "SubscriptionStatus",
                "responses": {
                    "200": {
                        "description": "User subscription status response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "price": {
                                                    "type": "string",
                                                    "example": "101.00"
                                                },
                                                "paid": {
                                                    "type": "string",
                                                    "example": "100.50"
                                                },
                                                "student_profile_id": {
                                                    "type": "integer",
                                                    "example": 12127
                                                },
                                                "starts_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-06-02"
                                                },
                                                "ends_at": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2026-02-02"
                                                },
                                                "subscribed_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-06-04 10:55:59"
                                                },
                                                "subscription": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "exam_type_id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "duration": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "price": {
                                                            "type": "string",
                                                            "example": "101.00"
                                                        },
                                                        "status": {
                                                            "type": "integer",
                                                            "example": 1
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User subscription status"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/subscription-type": {
            "get": {
                "tags": [
                    "Subscription"
                ],
                "summary": "Fetch all subscription list",
                "description": "Fetch all subscription list",
                "operationId": "SubscriptionList",
                "responses": {
                    "200": {
                        "description": "Active package list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "duration": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "price": {
                                                        "type": "string",
                                                        "example": "100.00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Active package list"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/teachers": {
            "get": {
                "tags": [
                    "Teachers"
                ],
                "summary": "Get list of teachers",
                "description": "Fetches all teachers with their details such as image, username, fullname, email, phone, and location",
                "operationId": "dbea6118252d78b5ca1fd888c3dce6e2",
                "responses": {
                    "200": {
                        "description": "Teacher List fetched successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Teacher List fetched successfully."
                                        },
                                        "students": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "image_url"
                                                    },
                                                    "username": {
                                                        "type": "string",
                                                        "example": "teacher_username"
                                                    },
                                                    "fullname": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "email": {
                                                        "type": "string",
                                                        "example": "teacher@example.com"
                                                    },
                                                    "phone": {
                                                        "type": "string",
                                                        "example": "+1234567890"
                                                    },
                                                    "location": {
                                                        "type": "string",
                                                        "example": "New York"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid request"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teacher/exam": {
            "get": {
                "tags": [
                    "TeacherExam"
                ],
                "summary": "Get all exam of logged in teacher",
                "description": "Fetches all exam of logged in teacher.",
                "operationId": "teacher_exam_list",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page no of list",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Teacher (Loksewa) Exam List with Total Questions",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 368
                                                            },
                                                            "publised": {
                                                                "type": "integer",
                                                                "example": 0
                                                            },
                                                            "exam_type": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 4
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "Administration Loksewa all levels Exams"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "exam_name": {
                                                                "type": "string",
                                                                "example": "Loksewa Online Exam for Nasu & Kharidar"
                                                            },
                                                            "total_questions": {
                                                                "type": "integer",
                                                                "example": 50
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 9
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "teacher(loksewa) exam list"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TeacherExam"
                ],
                "summary": "Add an exam (via teacher)",
                "description": "Add an exam. (Note: For 'publish', value must be either 1 or 0)",
                "operationId": "teacher_exam",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "exam_type_id",
                                    "category_type",
                                    "exam_name",
                                    "description",
                                    "publish"
                                ],
                                "properties": {
                                    "exam_type_id": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "category_type": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "exam_name": {
                                        "type": "string",
                                        "example": "This is some exam name"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is some description of exam"
                                    },
                                    "publish": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Exam Added Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "exam added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teacher/exam/{exam}": {
            "delete": {
                "tags": [
                    "TeacherExam"
                ],
                "summary": "Delete an exam",
                "description": "Delete an exam by its ID.",
                "operationId": "deleteTeacherExam",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "The ID of the exam to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "exam name This is some exam name 1 deleted"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teacher/exam/{exam}/question": {
            "get": {
                "tags": [
                    "TeacherQuestion"
                ],
                "summary": "Get all question of an exam of logged in teacher",
                "description": "Fetches all question of an exam of logged in teacher",
                "operationId": "teacher_exam_question_list",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "ID of an exam",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "description": "page no of list",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Exam questions list with options",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "questions": {
                                                    "properties": {
                                                        "data": {
                                                            "type": "array",
                                                            "items": {
                                                                "properties": {
                                                                    "id": {
                                                                        "type": "integer",
                                                                        "example": 185959
                                                                    },
                                                                    "question": {
                                                                        "type": "string",
                                                                        "example": "What is the highest mountain peak in the world?"
                                                                    },
                                                                    "explanation": {
                                                                        "type": "string",
                                                                        "example": "The correct answer, Mount Everest, is considered the highest mountain peak..."
                                                                    },
                                                                    "options": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "properties": {
                                                                                "id": {
                                                                                    "type": "integer",
                                                                                    "example": 3262633
                                                                                },
                                                                                "question_id": {
                                                                                    "type": "integer",
                                                                                    "example": 185959
                                                                                },
                                                                                "option": {
                                                                                    "type": "string",
                                                                                    "example": "The Mount Everest"
                                                                                },
                                                                                "value": {
                                                                                    "type": "integer",
                                                                                    "example": 1
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        }
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        },
                                                        "current_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "last_page": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 10
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "exam": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 2378
                                                        },
                                                        "is_active": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "exam_name": {
                                                            "type": "string",
                                                            "example": "This is some exam name"
                                                        },
                                                        "exam_date": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "exam_time": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "end_time": {
                                                            "type": "string",
                                                            "example": null,
                                                            "nullable": true
                                                        },
                                                        "category": {
                                                            "type": "string",
                                                            "example": "MOCK_TEST"
                                                        },
                                                        "description": {
                                                            "type": "string",
                                                            "example": "This is some description for this exam"
                                                        },
                                                        "exam_type": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer",
                                                                    "example": 3
                                                                },
                                                                "name": {
                                                                    "type": "string",
                                                                    "example": "MBBS Entrance Exams"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "exam name: This is some exam name, question list"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "TeacherQuestion"
                ],
                "summary": "Store question (with options) for an exam of a teacher",
                "description": "Stores a question along with multiple-choice options and an optional image for a teacher's exam.",
                "operationId": "teacher_question_store",
                "parameters": [
                    {
                        "name": "exam",
                        "in": "path",
                        "description": "exam id of question",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "question",
                                    "option_a",
                                    "option_a_is_true",
                                    "option_b",
                                    "option_b_is_true",
                                    "option_c",
                                    "option_c_is_true",
                                    "option_d",
                                    "option_d_is_true",
                                    "explanation"
                                ],
                                "properties": {
                                    "question": {
                                        "type": "string",
                                        "example": "Who was the first person to land on the moon?"
                                    },
                                    "option_a": {
                                        "type": "string",
                                        "example": "Albert Einstein"
                                    },
                                    "option_a_is_true": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "option_b": {
                                        "type": "string",
                                        "example": "Edmund Hillary"
                                    },
                                    "option_b_is_true": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "option_c": {
                                        "type": "string",
                                        "example": "Neil Armstrong"
                                    },
                                    "option_c_is_true": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "option_d": {
                                        "type": "string",
                                        "example": "Bill Clinton"
                                    },
                                    "option_d_is_true": {
                                        "type": "integer",
                                        "example": 0
                                    },
                                    "explanation": {
                                        "type": "string",
                                        "example": "On July 20, 1969, during NASA’s Apollo 11 mission, Neil Armstrong became the first human to step onto the Moon."
                                    },
                                    "image": {
                                        "description": "Optional image file to upload",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Question Added Successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Question added of exam name: This is some exam name"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/teacher/question/{question}": {
            "delete": {
                "tags": [
                    "TeacherQuestion"
                ],
                "summary": "Delete an exam's question",
                "description": "Delete an exam's question by its ID.",
                "operationId": "deleteTeacherExamQuestion",
                "parameters": [
                    {
                        "name": "question",
                        "in": "path",
                        "description": "The ID of the exam's question to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "string",
                                            "example": null,
                                            "nullable": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "question removed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "Forum",
            "description": "API Endpoints for Managing Forum Questions"
        },
        {
            "name": "Quiz",
            "description": "Quiz"
        },
        {
            "name": "Users",
            "description": "Users"
        },
        {
            "name": "Student Authentication",
            "description": "Student Authentication"
        },
        {
            "name": "Admin Authentication",
            "description": "Admin Authentication"
        },
        {
            "name": "Teacher Authentication",
            "description": "Teacher Authentication"
        },
        {
            "name": "Question Banks",
            "description": "Question Banks"
        },
        {
            "name": "Blog",
            "description": "Blog"
        },
        {
            "name": "Bookmarks",
            "description": "Bookmarks"
        },
        {
            "name": "CorporateLogin",
            "description": "CorporateLogin"
        },
        {
            "name": "CorporateExams",
            "description": "CorporateExams"
        },
        {
            "name": "corporateExamSection",
            "description": "corporateExamSection"
        },
        {
            "name": "Doubts",
            "description": "Doubts"
        },
        {
            "name": "ExamCategory",
            "description": "ExamCategory"
        },
        {
            "name": "Exams",
            "description": "Exams"
        },
        {
            "name": "Exam Types",
            "description": "Exam Types"
        },
        {
            "name": "AnswerSheet Migration",
            "description": "AnswerSheet Migration"
        },
        {
            "name": "Notification",
            "description": "Notification"
        },
        {
            "name": "Organizations",
            "description": "Organizations"
        },
        {
            "name": "Esewa",
            "description": "Esewa"
        },
        {
            "name": "Pool",
            "description": "Pool"
        },
        {
            "name": "PromoCode",
            "description": "PromoCode"
        },
        {
            "name": "MCQs",
            "description": "MCQs"
        },
        {
            "name": "Students",
            "description": "Students"
        },
        {
            "name": "Subjects",
            "description": "Subjects"
        },
        {
            "name": "Subscription",
            "description": "Subscription"
        },
        {
            "name": "Teachers",
            "description": "Teachers"
        },
        {
            "name": "TeacherExam",
            "description": "TeacherExam"
        },
        {
            "name": "TeacherQuestion",
            "description": "TeacherQuestion"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ]
}